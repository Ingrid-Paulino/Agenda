version: '3.9'
services:
  frontend:
    # quando rodar o services, o build sera rodado
    build: ./frontend
    container_name: frontend_agenda_container
    restart: 'always'
    # ports:
    #   - 3000:3000
    #linca o front-end com o backend
    volumes:
      - ./frontend:/app
    # //OBS: Quando for usar, descomenta
    depends_on:
      backend:
        condition: service_healthy #sinaliza se tem algum problema que ele estaja dependendo

    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5
  backend:
    build: ./backend
    container_name: backend_agenda_container
    restart: 'always'
    # ports:
    #   - 3001:3001
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    environment:
      - PORT=3004
      # Os dados abaixo se referem ao container `db`
      # Dica: Relembre aqui da comunicação interna entre containers
      - DB_USER=root
      - DB_PASS=123456
      - DB_HOST=db
      - DB_NAME=agenda
      - DB_PORT=3002
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5
  db:
    image: mysql
    container_name: db_agenda
    ports:
      - 3002:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    restart: 'always'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"] # Deve aguardar o banco ficar operacional
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
